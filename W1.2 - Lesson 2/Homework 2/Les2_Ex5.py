'''
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
'''

# ввод данных для задачи
my_list = [32, 24, 12, 7, 5, 3, 3, 2]
while True:
    number = input('Введите любое натуральное число:\n')
    if number.isdigit() and (int(number) > 0):
        number = int(number)
        break
print ('Первоначальный список:\n', my_list)

# Короткое решение (append + sort(reverse))
my_list.append(number)
my_list.sort(reverse=True)

'''
# Длинное решение:
# В зависимости от введенного числа, может выполниться одно из 4-х условий:
if number >= my_list[0]:     # введенное число принадлежит множеству [max; +inf)
    my_list.insert(0, number)
elif number < my_list[-1]:  # введенное число принадлежит множеству [1; min)
    my_list.append(number)
elif number in my_list:     # введенное число совпадает с элементами my_list, внутри множества [min; max]
    my_list.insert(my_list.index(number), number)
else:
    # поиск индекса ближайшего к number максимального элемента внутри области [min; max]
    idx = 0
    for el in my_list:
        if (number < el):
            idx += 1
        else:
            my_list.insert(idx, number)
            break
'''
print(f'Введенное число {number} внесено в список:\n {my_list}')